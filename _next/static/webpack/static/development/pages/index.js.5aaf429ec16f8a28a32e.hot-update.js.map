{"version":3,"file":"static/webpack/static/development/pages/index.js.5aaf429ec16f8a28a32e.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["\"use strict\";\n\nimport React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport Ad from \"../src/Ad\";\nimport Hint from \"../src/Hint\";\n\nconst styles = (theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  main: {\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    marginTop: theme.spacing(1),\n  },\n  formField: {\n    width: \"200px\",\n  },\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      makes: [\"Audi\", \"Ford\", \"Hyundai\", \"Jaguar\", \"Kia\", \"Nissan\", \"Porsche\", \"Polestar\", \"Tesla\"],\n      models: [],\n      make: \"\",\n      model: \"\",\n      year: \"\",\n      data: [],\n    };\n  }\n\n  handleMakeChange = (event) => {\n    this.setState({ make: event.target.value });\n    this.loadData(event.target.value, null, true);\n    if (!event.target.value) {\n      // no make selected, clear models\n      this.setState({ models: [] });\n    }\n  };\n\n  handleModelChange = (event) => {\n    this.setState({ model: event.target.value });\n    this.loadData(this.state.make, event.target.value, false);\n  };\n\n  loadModels = (data) => {\n    let modelMap = new Map();\n    data.forEach((element) => {\n      if (element.Model) {\n        // parse model identifier\n        let model = element.Sort.split(\"-\")[0];\n        modelMap.set(element.Model, model);\n      }\n    });\n    // create array for data\n    let models = [];\n    modelMap.forEach(function (value, key) {\n      models.push({ key: value, value: key });\n    });\n    this.setState({ models: models });\n  };\n\n  loadData = (make, model, shouldLoadModels) => {\n    this.setState({ data: [] });\n    if (make) {\n      var uri = make;\n      if (model) {\n        uri += \"/\" + model;\n      }\n      // fetch(\"http://jsonplaceholder.typicode.com/users\")\n      fetch(\"http://localhost:8000/vehicles/\" + uri)\n      // fetch(\"https://hofpnvfyu2.execute-api.us-east-1.amazonaws.com/vehicles/\" + uri)\n        .then((res) => res.json())\n        .then((data) => {\n          this.setState({ data: data });\n          if (shouldLoadModels) {\n            this.loadModels(data);\n          }\n        })\n        .catch(console.log);\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <Container component=\"main\" className={classes.main} maxWidth=\"lg\">\n          <Grid container spacing={2}>\n            <Grid item>\n              <Typography variant=\"h5\" component=\"h1\" gutterBottom>\n                Electric Vehicle Search\n              </Typography>\n            </Grid>\n            <Grid item>\n              <FormControl variant=\"outlined\">\n                <InputLabel htmlFor=\"outlined-age-native-simple\">\n                  Make\n                </InputLabel>\n                <Select\n                  native\n                  value={this.state.make}\n                  onChange={this.handleMakeChange}\n                  label=\"Make\"\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {this.state.makes.sort().map((x, index) => {\n                    return <option key={x} value={x}>{x}</option>;\n                  })}\n                </Select>\n              </FormControl>\n              <FormControl variant=\"outlined\" className={classes.formField}>\n                <InputLabel htmlFor=\"outlined-age-native-simple\">\n                  Model\n                </InputLabel>\n                <Select\n                  native\n                  value={this.state.model}\n                  onChange={this.handleModelChange}\n                  disabled={this.state.models.length === 0}\n                  label=\"Model\"\n                >\n                  <option aria-label=\"None\" value=\"\" />\n                  {this.state.models.sort().map((x) => {\n                    return <option key={x.key} value={x.key}>{x.value}</option>;\n                  })}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"subtitle1\">\n                Research electric vehicles with the most up-to-date\n                specifications from Tesla, Audi, Rivian, Ford, Volkswagen,\n                Polestar, Volvo, BMW, and other battery electric vehicle (BEV)\n                automakers.\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <div className={classes.table}>\n            <MaterialTable\n              columns={[\n                {\n                  title: \"Make\",\n                  field: \"Make\",\n                  headerStyle: { whiteSpace: \"nowrap\" },\n                },\n                {\n                  title: \"Model\",\n                  field: \"Model\",\n                  headerStyle: { whiteSpace: \"nowrap\" },\n                },\n                {\n                  title: \"Year\",\n                  field: \"Year\",\n                  type: \"numeric\",\n                  width: 50,\n                  headerStyle: { whiteSpace: \"nowrap\" },\n                },\n                {\n                  title: \"Trim\",\n                  field: \"Variant\",\n                  headerStyle: { whiteSpace: \"nowrap\" },\n                },\n                {\n                  title: \"Range (mi)\",\n                  field: \"Range\",\n                  type: \"numeric\",\n                  width: \"1%\",\n                  headerStyle: { whiteSpace: \"nowrap\" },\n                },\n                {\n                  title: \"Accel (0-60)\",\n                  field: \"Accel\",\n                  type: \"numeric\",\n                  width: \"1%\",\n                  headerStyle: { whiteSpace: \"nowrap\" },\n                },\n                {\n                  title: \"Power (hp)\",\n                  field: \"PowerHP\",\n                  type: \"numeric\",\n                  width: \"1%\",\n                  headerStyle: { whiteSpace: \"nowrap\" },\n                },\n                {\n                  title: \"Torque\",\n                  field: \"Torque\",\n                  type: \"numeric\",\n                  headerStyle: { whiteSpace: \"nowrap\" },\n                  width: \"1%\",\n                },\n\n              ]}\n              data={this.state.data}\n              options={{\n                draggable: false,\n                sorting: true,\n                search: true,\n                padding: \"dense\",\n                showTitle: false,\n                toolbar: true,\n                paging: false,\n                headerStyle: {\n                  backgroundColor: \"#1976d2\",\n                  color: \"#FFF\",\n                },\n                searchFieldAlignment: \"left\",\n                rowStyle: (rowData, index) => {\n                  if (index % 2) {\n                    return { backgroundColor: \"#f2f2f2\" };\n                  }\n                },\n              }}\n              localization={{\n                body: {\n                  emptyDataSourceMessage:\n                    'Select a \"Make\" and \"Model\" to display vehicle data',\n                },\n                toolbar: {\n                  searchPlaceholder: \"Find within results\",\n                },\n              }}\n            />\n          </div>\n          <Hint />\n          <Ad />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);\n"],"mappings":"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","sourceRoot":""}